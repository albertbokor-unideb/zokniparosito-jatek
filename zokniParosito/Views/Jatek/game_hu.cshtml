@{
ViewData["Title"] = "Leaderboard";

}
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<link rel="stylesheet" type="text/css" href="~/css/Jatek/Jatek.css">
<div class="container">
    <div class="row">
        <h1>Zoknipárosító</h1>
    </div>
    <div class="row pt-1">
        <div class="col-3 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="1" data-sock="bal">BAL 1</div>
        </div>
        <div class="col-2">
            <span id="ido">00:00</span>
        </div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="6" data-sock="jobb">JOBB 1</div>
        </div>
        <div class="col-3 ures"></div>
    </div>
    <div class="row pt-1">
        <div class="col-3 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="2" data-sock="bal">BAL 2</div>
        </div>
        <div class="col-2 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="7" data-sock="jobb">JOBB 2</div>
        </div>
        <div class="col-3 ures"></div>
    </div>
    <div class="row pt-1">
        <div class="col-3 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="3"data-sock="bal">BAL 3</div>
        </div>
        <div class="col-2 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="8"data-sock="jobb">JOBB 3</div>
        </div>
        <div class="col-3 ures"></div>
    </div>
    <div class="row pt-1">
        <div class="col-3 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="4" data-sock="bal">BAL 4</div>
        </div>
        <div class="col-2 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="9" data-sock="jobb">JOBB 4</div>
        </div>
        <div class="col-3 ures"></div>
    </div>

    <div class="row pt-1">
        <div class="col-3 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="5" data-sock="bal">BAL 5</div>
        </div>
        <div class="col-2 ures"></div>
        <div class="col-2">
            <div class="btn-lg btn-primary gomb" id="10" data-sock="jobb">JOBB 5</div>
        </div>
        <div class="col-3 ures"></div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="~/js/Jatek/JatekAdatok.js"></script>
<script src="~/js/Home/PalyaAdatok.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
var selectedDifficult = @ViewData["Diff"];
var playerName = '@Html.Raw(ViewData["Name"])';
GetZoknikByNehezseg(selectedDifficult)
    .then(function (data) {
        var adat = data;
        console.log(adat.toString())// Az adatok elérhetők itt

        for (let i = 1; i <= 5; i++) {
            const gomb = document.getElementById(i.toString()); // Az i. gomb kiválasztása

            if (gomb && data[i - 1]) { // Ellenőrizzük, hogy a gomb és az adat létezik
                const img = document.createElement('img'); // Kép elem létrehozása
                img.id = data[i-1].ZokniID;
                img.src = '/resource/' + data[i - 1].Kep; // Kép elérési útjának beállítása
                img.alt = data[i - 1].Nev; // Opcionális: képalternatíva beállítása

                // Kép hozzáadása a gomb tartalmához
                gomb.innerHTML = ''; // Töröld a gomb tartalmát
                gomb.appendChild(img); // Hozzáadja a képet a gombhoz
            }
        }
        for (let i = 6; i <= 10; i++) {
            const gomb = document.getElementById(i.toString()); // Az i. gomb kiválasztása

            if (gomb && data.length > 0) { // Ellenőrizzük, hogy a gomb és az adat létezik
                const randomIndex = getRandomIndex(data); // Random index kiválasztása
                const randomData = data.splice(randomIndex, 1)[0]; // Elem eltávolítása a tömbből

                const img = document.createElement('img'); // Kép elem létrehozása
                img.id = randomData.ZokniID;
                img.src = '/resource/' + randomData.Kep; // Kép elérési útjának beállítása
                img.alt = randomData.Nev; // Opcionális: képalternatíva beállítása

                // Kép hozzáadása a gomb tartalmához
                gomb.innerHTML = ''; // Töröld a gomb tartalmát
                gomb.appendChild(img); // Hozzáadja a képet a gombhoz
            }
        }
           

    })
    .catch(function (error) {
        console.log(error);
    });
function getRandomIndex(arr) {
    return Math.floor(Math.random() * arr.length);
}

// Először szükséged van az összes gomb elemre.
const buttons = document.querySelectorAll('.gomb');
var balvalasztva = false;
var jobbvalasztva = false;
var balid = 0;
var jobbid = 0;
var imagesToRemove = [];
var parszamlalo = 0;
// A gombokhoz hozzárendeljük a kattintás eseménykezelőt.
buttons.forEach(button => {
    button.addEventListener('click', function () {
        // Az id érték lekérése
        const id = this.id;
        console.log("this.id: "+ this.id)
        // A data-sock érték lekérése
        const dataSock = this.getAttribute('data-sock');

        // Keresd meg a div-et
        const divElem = document.getElementById(id);

        // Keresd meg a div-en belüli képet
        const imgElem = divElem.querySelector('img');

        // Kép id-jének lekérése
        const imgId = imgElem ? imgElem.id : null;

        if (imgId) {
            // Itt már rendelkezésre áll az imgId, amit felhasználhatsz
            console.log("A div-en belüli kép id-je: " + imgId);
            // További műveletek az imgId-vel
        }
        if(imgId === balid && dataSock === "bal"){
            balid = 0;
            balvalasztva = false;
            //ITT LEVESSZÜK A KÉK KERETET
            this.style.border = "2px solid #da3c2e";
            imagesToRemove.pop(id);
            console.log("Bal oldali kiválasztás törölve")
        }
        else{
            if(balvalasztva === false && dataSock === "bal"){
                balvalasztva = true;
                balid = imgId;
                imagesToRemove.push(id);
                this.style.border = "4px solid blue";
                console.log("Bal oldalon kiválasztva")
            }
            if(dataSock === "bal"){
                console.log("Bal oldalon már volt választás")
            }
        }
        if (imgId === jobbid && dataSock === "jobb") {
            jobbid = 0;
            jobbvalasztva = false;
            imagesToRemove.pop(id);
            //ITT LEVESSZÜK A KÉK KERETET
            this.style.border = "2px solid #da3c2e";
            console.log("Jobb oldali kijelőlés törölve")
        }
        else{
            if (jobbvalasztva === false && dataSock === "jobb") {
                jobbvalasztva = true;
                jobbid = imgId;
                //ITT RÁ RAKJUK
                imagesToRemove.push(id);
                this.style.border = "4px solid blue";
                console.log("Jobb oldalon kiválasztva")
            }
            if(dataSock === "jobb") {
                console.log("Jobb oldalon már volt választás")
            }
            // Most már rendelkezésre állnak az id és dataSock értékek, amiket használhatsz.
              
        }
        if(balid === jobbid && balid != 0 && jobbid != 0){
            console.log("PÁR TALÁLTÁL")
            parszamlalo = parszamlalo + 1;
            balid = 0;
            jobbid =0
            balvalasztva = false;
            jobbvalasztva = false;
            imagesToRemove.forEach(imgToRemove => {
                var divToDelete = document.getElementById(imgToRemove);

                // 2. Ellenőrizzük, hogy az elem létezik-e
                if (divToDelete) {
                    // 3. Az elemet eltávolítjuk
                    divToDelete.remove();
                }
                    
            });
        }
        if(parszamlalo === 5)
        {
            alert("Sikeresen teljesítve!");
            const currentDate = new Date();
            const newUrl = `/Home/Index`;
            const idoElem = document.getElementById("ido");

            // Az "ido" elem tartalmának kiszedése egy változóba
            const ido = idoElem.textContent;
            console.log(ido)

            // Ajax kérés beállítása
            $.ajax({
                type: "POST",
                url: "/Leaderboard/InsertLeaderBoard", // Az InsertLeaderBoard metódus útvonala
                data: {
                    JatekosNev: playerName,
                    RekordIdo: ido,
                    PalyaID : selectedDifficult
                },
                success: function (response) {
                    // Sikeres válasz esetén
                    console.log(response);
                },
                error: function (error) {
                    // Hiba esetén
                    console.error(error);
                }
            });
            window.location.href = '/Home/Index'
                
        }
    });
});

let elinditva = false;
let idoKezdete;

function frissitIdo() {
    if (elinditva) {
        const jelenlegiIdo = new Date().getTime();
        const kulonbsegMsec = jelenlegiIdo - idoKezdete;
        const kulonbsegSec = Math.floor(kulonbsegMsec / 1000);
        const ora = Math.floor(kulonbsegSec / 3600); // Órák számítása
        const perc = Math.floor((kulonbsegSec % 3600) / 60); // Perc számítása
        const masodperc = kulonbsegSec % 60;
        const tizedesmasodperc = Math.floor((kulonbsegMsec % 1000) / 10); // Tizedesmásodpercek számítása

        // Formázás a TimeSpan formátumhoz: óra:perc:másodperc.tizedesmásodperc
        const idoString = `${ora < 10 ? "0" : ""}${ora}:${perc < 10 ? "0" : ""}${perc}:${masodperc < 10 ? "0" : ""}${masodperc}.${tizedesmasodperc < 10 ? "0" : ""}${tizedesmasodperc}`;

        const idoElem = document.getElementById("ido");
        idoElem.textContent = idoString;

        requestAnimationFrame(frissitIdo);
    }
}

function inditIdomero() {
    if (!elinditva) {
        elinditva = true;
        idoKezdete = new Date().getTime();
        frissitIdo();
    }
}

window.onload = function () {
    inditIdomero();
};
</script>

